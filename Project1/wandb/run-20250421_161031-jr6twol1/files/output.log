Epoch 1/30:   0%|                                                                                                 | 0/146 [00:09<?, ?batch/s]
Traceback (most recent call last):
  File "D:\A-Practical-Course-to-Intelligent-Perception-and-Cognition\Project1\execute.py", line 47, in <module>
    utils.train_model(
  File "D:\A-Practical-Course-to-Intelligent-Perception-and-Cognition\Project1\utils.py", line 42, in train_model
    loss.backward()
  File "D:\anaconda3\envs\ML\Lib\site-packages\torch\_tensor.py", line 581, in backward
    torch.autograd.backward(
  File "D:\anaconda3\envs\ML\Lib\site-packages\torch\autograd\__init__.py", line 347, in backward
    _engine_run_backward(
  File "D:\anaconda3\envs\ML\Lib\site-packages\torch\autograd\graph.py", line 825, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 3.07 GiB. GPU 0 has a total capacity of 6.00 GiB of which 0 bytes is free. Of the allocated memory 9.53 GiB is allocated by PyTorch, and 115.52 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
